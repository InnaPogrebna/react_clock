{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","setInterval","this","setState","clearInterval","name","props","toLocaleTimeString","React","Component","getRandom","Math","floor","random","App","isClockVisible","number","getShowClock","getHideClock","getChangeNumber","className","type","onClick","disabled","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAwBC,aAAY,cAAU,KALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,kBAAM,EAAKE,SAAS,CAAEL,KAAM,IAAIC,SAAW,OAR1E,kCAWE,WACEK,cAAcF,KAAKF,WAZvB,oBAeE,WACE,IAAQF,EAASI,KAAKL,MAAdC,KACAO,EAASH,KAAKI,MAAdD,KAER,OACE,qCACE,4BACGP,EAAKS,uBAER,qDACqBF,YAzB7B,GAA2BG,IAAMC,WCD3BC,EAAY,WAChB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,KAGpCC,E,4MACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,OAAQ,G,EAGVC,aAAe,WACb,EAAKd,SAAS,CACZY,gBAAgB,K,EAIpBG,aAAe,WACb,EAAKf,SAAS,CACZY,gBAAgB,K,EAIpBI,gBAAkB,WAChB,EAAKhB,SAAS,CACZa,OAAQN,O,4CAIZ,WACE,MAAmCR,KAAKL,MAAhCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,OAExB,OACE,sBAAKI,UAAU,MAAf,UACE,6CACA,gDAEIL,GAAkB,cAAC,EAAD,CAAOV,KAAMW,OAEnC,gCACE,wBACEK,KAAK,SACLC,QAASpB,KAAKe,aAFhB,uBAMA,wBACEI,KAAK,SACLC,QAASpB,KAAKgB,aAFhB,0BAOF,wBACEG,KAAK,SACLC,QAASpB,KAAKiB,gBACdI,UAAWR,EAHb,sC,GAhDUP,IAAMC,WA4DTK,ICtEfU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29ecadcb.chunk.js","sourcesContent":["import React from 'react';\n\ntype ClockState = {\n  time: Date,\n};\n\ntype ClockProps = {\n  name: number,\n};\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 1000);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => this.setState({ time: new Date() }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <p>\n          {time.toLocaleTimeString()}\n        </p>\n        <p>\n          {`Random number: ${name}`}\n        </p>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  number: number,\n};\n\nconst getRandom = ():number => {\n  return Math.floor(Math.random() * 100 + 10);\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    number: 2,\n  };\n\n  getShowClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  getHideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  getChangeNumber = () => {\n    this.setState({\n      number: getRandom(),\n    });\n  };\n\n  render() {\n    const { isClockVisible, number } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          Current time:\n          { isClockVisible && <Clock name={number} />}\n        </div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.getShowClock}\n          >\n            ShowClock\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.getHideClock}\n          >\n            HideClock\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          onClick={this.getChangeNumber}\n          disabled={!isClockVisible}\n        >\n          Get Random Number\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}